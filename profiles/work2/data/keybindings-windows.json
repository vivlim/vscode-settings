[
    { "key": "ctrl+shift+p", "command": "workbench.action.showCommands", "when": "!editorFocus"},
    {
        "key": "space",
        "command": "git.stage",
        "when": "!inputFocus && sidebarVisible"
    },
    {
        "key": "shift+space",
        "command": "git.unstage",
        "when": "!inputFocus && sidebarVisible"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+alt+space",
        "command": "workbench.action.quickOpenTerm"
    },
    {
        "key": "ctrl+t",
        "command": "-extension.vim_ctrl+t",
        "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.focusPrev",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "command": "vscode-neovim.compositeEscape2",
        "key": "k",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "k"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    { 
        "key": "f4",
        "command": "workbench.action.tasks.runTask",
        "args": "rust: cargo run",
        //"when": "config.viv.bindings.cargoRun" // Must be "config.{settingName}"
    },
    {
        "key": "j",
        "command": "-notebook.focusNextEditor",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "j",
        "command": "-list.focusDown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "k",
        "command": "-list.focusUp",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "k",
        "command": "-notebook.focusPreviousEditor",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+i",
        "command": "gptcc.Complete",
        "when": "editorTextFocus && gptcc.suggestionVisible && !editorHasSelection && !editorReadonly"
    },
    {
        "key": "right",
        "command": "-gptcc.Complete",
        "when": "editorTextFocus && gptcc.suggestionVisible && !editorHasSelection && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "editor.action.inlineSuggest.trigger"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "escape",
        "command": "-gitlens.key.escape",
        "when": "editorTextFocus && gitlens:key:escape && !codeActionMenuVisible && !findWidgetVisible && !isInEmbeddedEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible"
    },
    {
        "key": "escape",
        "command": "-gitlens.key.escape",
        "when": "editorTextFocus && gitlens:key:escape && !findWidgetVisible && !isInEmbeddedEditor && !renameInputVisible && !suggestWidgetVisible"
    },
    {
        "key": "j",
        "command": "-list.focusDown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusUp",
        "when": "notebookEditorFocused"
    },
    {
        "key": "k",
        "command": "-list.focusUp",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "i",
        "command": "runCommands",
        "args": {
            "commands": [
                "notebook.cell.edit",
                "extension.vim_insert",
            ]
        },
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    }

]